# Common definitions that each project's Makefile can use.
#
# Builds all view-*.scad into build/view-*.png.
# Generates make deps files at deps/view-*.png.deps.

include ../Makefile.paths

TARGETS_PNG=$(subst .scad,.png,$(wildcard view-*.scad))
TARGETS_GIF=$(subst .scad,.gif,$(wildcard anim-*.scad))

PROJECT_NAME=$(notdir $(basename $(CURDIR)))
MODEL_SCAD=${PROJECT_NAME}.scad
SRC_PARAMS_SCAD=params.scad
DEPS_DIR=deps/
DEPS_PARAMS_SCAD=${DEPS_DIR}params.scad
JEKYLL_DATA_FILE=../_data/${PROJECT_NAME}.yaml

.PHONY: all make_directories
all: make_directories ${TARGETS_PNG} ${TARGETS_GIF} ${JEKYLL_DATA_FILE}

make_directories:
	-@mkdir -p $(dir ${JEKYLL_DATA_FILE})
	-@mkdir -p ${DEPS_DIR}

%.png: %.scad
	${OPENSCAD} --hardwarnings -m make -o $@ -d ${DEPS_DIR}$(@F).deps --colorscheme Nature ${EXTRA_OPTS} ${CAMERA_OPT} $<

%.gif: %.scad
	${OPENSCAD} --hardwarnings -m make -o $(subst .scad,.png,$<) -d ${DEPS_DIR}$(@F).deps --colorscheme Nature ${EXTRA_OPTS} ${CAMERA_OPT} $<
	sed -i '' -e 's/^anim-.*png/$(@F)/' ${DEPS_DIR}$(@F).deps
	convert -delay 10 $(subst .scad,,$<)*.png half-$@
	convert half-$@ -loop 0 -coalesce -duplicate 1,-2-1 $@

%.png %.gif: EXTRA_OPTS=$(shell grep "//cmdline:" $< | sed -e "s,//cmdline:,,g")
%.png %.gif: CAMERA_OPT=$(shell ${OPENSCAD} --export-format echo -o - $< | grep "camera" | sed -e 's/.*"\(.*\)"/\1/')

# First create a dummy scad that calls all the zero-arg parameters and
# echos their names and values to the log, as entries in a YAML file,
# that Jekyll will render into the HTML file.
${JEKYLL_DATA_FILE}: ${MODEL_SCAD} ${SRC_PARAMS_SCAD}
	@echo "include <../${SRC_PARAMS_SCAD}>" > ${DEPS_PARAMS_SCAD}
	@echo "use <../${MODEL_SCAD}>" >> ${DEPS_PARAMS_SCAD}
	@echo "function sigfig2(x) = is_num(x) ? round(100 * x) / 100 : x;" >> ${DEPS_PARAMS_SCAD}
	grep -E "^[a-zA-Z0-9_]+ *=" ${SRC_PARAMS_SCAD} | sed -e 's+\([a-zA-Z0-9_]*\).*+echo(str("\1: ", \1));+' >> ${DEPS_PARAMS_SCAD}
	grep -E "^function.*\(\)" ${MODEL_SCAD} | sed -e 's+function \([a-zA-Z0-9_]*\).*+echo(str("\1: ", sigfig2(\1())));+' >> ${DEPS_PARAMS_SCAD}
	${OPENSCAD} --export-format echo -o - ${DEPS_PARAMS_SCAD} | grep ECHO | sed -e 's/.*"\(.*\)"/\1/' > ${JEKYLL_DATA_FILE}

clean:
	-@rm -rf *.png *.gif ${DEPS_DIR} ${JEKYLL_DATA_FILE}

# explicit wildcard expansion suppresses errors when no files are found
include $(wildcard ${DEPS_DIR}*.deps)
